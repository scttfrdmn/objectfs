name: Nightly Tests

on:
  schedule:
    - cron: '0 2 * * *'  # 2 AM UTC daily
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: read
  issues: write

jobs:
  extended-aws-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 180

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23.x

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Create nightly test bucket
      env:
        TEST_BUCKET: objectfs-nightly-test-${{ github.run_id }}
      run: |
        aws s3 mb s3://$TEST_BUCKET

    - name: Run extended integration tests
      env:
        TEST_BUCKET: objectfs-nightly-test-${{ github.run_id }}
        AWS_PROFILE: aws
        AWS_REGION: us-west-2
      run: |
        # Run all tests including long-running ones
        go test -v -timeout=3h -tags=nightly ./...

    - name: Cleanup test bucket
      if: always()
      env:
        TEST_BUCKET: objectfs-nightly-test-${{ github.run_id }}
      run: |
        aws s3 rm s3://$TEST_BUCKET --recursive || true
        aws s3 rb s3://$TEST_BUCKET || true

  memory-leak-test:
    runs-on: ubuntu-latest
    timeout-minutes: 240

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23.x

    - name: Run memory profiling
      run: |
        # Run tests with memory profiling
        go test -v -timeout=4h -memprofile=mem.prof ./...

    - name: Analyze memory profile
      run: |
        go tool pprof -top mem.prof > memory-analysis.txt
        cat memory-analysis.txt

    - name: Upload memory profile
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: memory-profile
        path: |
          mem.prof
          memory-analysis.txt

  stress-test:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23.x

    - name: Run stress tests
      run: |
        # Run stress tests if they exist
        go test -v -timeout=2h -tags=stress ./tests/stress/... || echo "No stress tests found"

  notify-failures:
    needs: [extended-aws-tests, memory-leak-test, stress-test]
    if: failure()
    runs-on: ubuntu-latest

    steps:
    - name: Create issue for nightly failure
      uses: actions/github-script@v7
      with:
        script: |
          const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'ðŸš¨ Nightly Tests Failed - ' + new Date().toISOString().split('T')[0],
            body: `## Nightly Test Failure\n\nThe nightly test suite has failed.\n\n**Run:** ${runUrl}\n**Date:** ${new Date().toISOString()}\n\nPlease investigate the failure and address any issues.`,
            labels: ['bug', 'nightly-failure', 'ci']
          });
