name: Feature Branch CI

on:
  push:
    branches:
      - 'feature/**'
      - 'hotfix/**'

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  quick-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.22.x, 1.23.x, 1.24.x]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        cache: true
        cache-dependency-path: go.sum

    - name: Cache Go modules and build
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-

    - name: Install dependencies
      run: go mod download

    - name: Run unit tests (Tier 1)
      run: go test -race -short -coverprofile=coverage-${{ matrix.go-version }}.out -covermode=atomic ./...

    - name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage-${{ matrix.go-version }}.out
        flags: unittests-${{ matrix.go-version }}
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23.x

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest
        args: --timeout=10m

  security:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
      actions: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23.x

    - name: Install gosec
      run: go install github.com/securego/gosec/v2/cmd/gosec@latest

    - name: Run gosec Security Scanner
      run: gosec -fmt sarif -out gosec.sarif -no-fail ./...

    - name: Upload SARIF
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      continue-on-error: true
      with:
        sarif_file: gosec.sarif

  integration-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23.x

    - name: Run integration tests with mock backend (Tier 2)
      run: |
        # Run tests that use mock backends only
        go test -v -tags=integration -short ./tests/integration/...
